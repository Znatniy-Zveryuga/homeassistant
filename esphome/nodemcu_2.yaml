substitutions:
  device_name: nodemcu_2

esphome:
  name: ${device_name}
  platform: ESP8266
  board: nodemcuv2
  #arduino_version: 2.4.2

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  ap:
    ssid: ${device_name}
    password: !secret wifi_pass_2

logger:
api:
ota:
#web_server:

binary_sensor:
  - platform: status
    name: ${device_name}_status

  - platform: gpio
    pin:
      number: GPIO1
      mode: INPUT_PULLUP
      inverted: true
    name: ${device_name}_gas
    internal: true
    filters:
      - delayed_on: 100ms
      - delayed_off: 100ms
    on_press:
      then:
       - sensor.template.publish:
           id: count
           state: !lambda 'return id(count).state + 1;'

sensor:
  - platform: uptime
    name: ${device_name}_uptime

  - platform: wifi_signal
    name: ${device_name}_wifi_signal

  - platform: template
    name: ${device_name}_count
    id: count
    internal: true

  - platform: template
    name: ${device_name}_counter
    id: counter

  - platform: pulse_counter
    pin: GPIO1 #D2
    name: ${device_name}_counter_cubic
    update_interval : 30s
    count_mode:
      rising_edge: DISABLE
      falling_edge: INCREMENT
    filters:
      - lambda: |-
          static float total_value = 0.0;
          total_value += x * 0.001;
          return total_value;
    unit_of_measurement: "mÂ³"
    accuracy_decimals: 3
    icon: 'mdi:fire'

text_sensor:
  - platform: version
    name: ${device_name}_esphome_version
    icon: mdi:chip

  - platform: wifi_info
    ip_address:
      name: ${device_name}_ip_address
    ssid:
      name: ${device_name}_connected_ssid

switch:
  - platform: restart
    name: ${device_name}_restart

interval:
  - interval: 60sec
    then:
     - sensor.template.publish:
        id: counter
        state: !lambda 'return id(count).state;'
     - sensor.template.publish:
        id: count
        state: '0'

