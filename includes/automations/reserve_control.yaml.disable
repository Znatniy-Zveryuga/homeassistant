# Only for backup server

- alias: turn_off_automation
  initial_state: 'on'
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: automation.turn_off
      entity_id:
        - group.all_automations
    - delay: 00:01:00
    - service: automation.turn_on
      entity_id:
        - automation.hacs_persistent_notification
        - automation.khadas_ha_server_off_reserve_control

- alias: khadas_ha_server_on_return_control
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.ha1_uptime_dt
      from: "unavailable"
  condition:
    condition: state
    entity_id: input_boolean.automation_status
    state: 'on'
  action:
    - service: notify.telegram
      data:
        message: 'Заработал ХА на Khadas. Отдаю управление главному!'
    - service: input_boolean.turn_off
      entity_id: input_boolean.automation_status
    - service: automation.turn_off
      entity_id: group.all_automations
    - delay: 00:01:00
    - service: automation.turn_on
      entity_id:
        - automation.hacs_persistent_notification
        - automation.khadas_ha_server_off_reserve_control
        - automation.khadas_ha_server_off

- alias: khadas_ha_server_off_reserve_control
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.ha1_uptime_dt
      to: "unavailable"
#     for: "00:02:00"
  action:
    - service: notify.telegram
      data:
        message: 'Не работает ХА на Khadas. Беру управление на себя!'
    - service: input_boolean.turn_on
      entity_id: input_boolean.automation_status
    - service: automation.turn_on
      entity_id:
        - group.all_automations

