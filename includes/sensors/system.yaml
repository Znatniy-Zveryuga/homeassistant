- platform: systemmonitor
  resources:
    - type: last_boot
    - type: processor_use
    - type: memory_use_percent
    - type: swap_use_percent
    - type: disk_use_percent
      arg: /

- platform: command_line
  name: "CPU Temperature"
  command: 'cat /sys/class/thermal/thermal_zone0/temp'
  unit_of_measurement: "°C"
  value_template: "{{ value | multiply(0.001) }}"

- platform: command_line
  name: "HA Init"
  command: 'cat /config/home-assistant.log | grep -o "initialized[[:space:]]in[[:space:]][0-9]\+.[0-9]\+" | grep -o "[0-9]\+.[0-9]\+$" || echo -1'
  scan_interval: 180
  unit_of_measurement: "сек"

- platform: version
  name: "HA Current"
  scan_interval: 1800

- platform: uptime
  name: "HA Uptime"
  unit_of_measurement: minutes

- platform: template
  sensors:
    ha_latest2:
      friendly_name: "HA Latest"
      value_template: "{{ state_attr('binary_sensor.updater', 'newest_version') }}"
    ha_uptime_dt:
      icon_template: "mdi:clock"
      friendly_name: "HA Uptime"
      device_class: timestamp
      value_template: "{{ (as_timestamp(now()) - (states('sensor.ha_uptime') | float * 60)) | timestamp_custom('%Y-%m-%d %H:%M:%S%z', true) }}"
    ha1_uptime_dt:
      icon_template: "mdi:clock"
      friendly_name: "HA1 Uptime"
      device_class: timestamp
      value_template: >
        {% if states('sensor.ha1_uptime') in ['unavailable', 'unknown', 'none'] %}
          unavailable
        {% else %}
          {{ (as_timestamp(now()) - (states('sensor.ha1_uptime') | float * 60)) | timestamp_custom('%Y-%m-%d %H:%M:%S%z', true) }}
        {% endif %}
    ha2_uptime_dt:
      icon_template: "mdi:clock"
      friendly_name: "HA2 Uptime"
      device_class: timestamp
      value_template: >
        {% if states('sensor.ha2_uptime') in ['unavailable', 'unknown', 'none'] %}
          unavailable
        {% else %}
          {{ (as_timestamp(now()) - (states('sensor.ha2_uptime') | float * 60)) | timestamp_custom('%Y-%m-%d %H:%M:%S%z', true) }}
        {% endif %}
    ha_dacha_uptime_dt:
      icon_template: "mdi:clock"
      friendly_name: "HA Fazenda Uptime"
      device_class: timestamp
      value_template: >
        {% if states('sensor.ha_dacha_uptime') in ['unavailable', 'unknown', 'none'] %}
          unavailable
        {% else %}
          {{ (as_timestamp(now()) - (states('sensor.ha_dacha_uptime') | float * 60)) | timestamp_custom('%Y-%m-%d %H:%M:%S%z', true) }}
        {% endif %}

- platform: rest
  resource: https://version.home-assistant.io/stable.json
  name: "HA Latest"
  value_template: "{{ value_json.homeassistant.default }}"
  scan_interval: 1800

- platform: rest
  resource_template: "{{ states('input_text.ha1_url') }}api/states/sensor.ha_uptime"
  name: ha1_uptime
  unit_of_measurement: minutes
  force_update: true
  headers:
    authorization: !secret ha1_token
  value_template: "{{ value_json.state }}"

- platform: rest
  resource_template: "{{ states('input_text.ha2_url') }}api/states/sensor.ha_uptime"
  name: ha2_uptime
  unit_of_measurement: minutes
  force_update: true
  headers:
    authorization: !secret ha2_token
  value_template: "{{ value_json.state }}"

- platform: rest
  resource_template: "{{ states('input_text.ha_dacha_url') }}api/states/sensor.ha_uptime"
  name: ha_dacha_uptime
  unit_of_measurement: minutes
  force_update: true
  headers:
    authorization: !secret ha_dacha_token
  value_template: "{{ value_json.state }}"

